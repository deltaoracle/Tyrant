resources:
  repositories:
  - repository: templates
    type: git
    name: ixm-iac/ixm-library-cicd
    ref: refs/heads/main

trigger:
  branches:
    include:
    - master
    - main
  paths:
    exclude:
    - README.md
    - '*.md'

pr: none

variables:
- group: tofu-pipeline
- name: 'tofuVersion'
  value: '1.10.6'
- name: tfstateKeyPrefix
  value: 'projects/tyrant'

parameters:
- name: targetLayer
  displayName: 'Target Layer (leave empty for all layers)(use the folder name of each layer)'
  type: string
  default: ''
- name: targetEnvironment
  displayName: 'Target Environment (leave empty for all environments)(use the name of the environment file)'
  type: string
  default: ''

pool:
  vmImage: 'ubuntu-latest'

stages:
# Stage: Parse layers.yml to extract all layers
- stage: Validate
  displayName: 'üõ°Ô∏è Validate Code'
  jobs:
  - template: templates-iac/validate-jobs.yml@templates
    parameters:
      tofuVersion: '${{ variables.tofuVersion }}'
      trivyScanners: 'misconfig,secret'
      trivyIgnoreScanErrors: true

# Static stages for each layer (in dependency order)
# Layer 1: Infra
- stage: Layer_infra
  displayName: 'üèóÔ∏è Layer: infra'
  condition: |
    and(
      in(dependencies.Validate.result, 'Succeeded', 'SucceededWithIssues'),
      or(
        eq('${{ parameters.targetLayer }}', ''),
        eq('${{ parameters.targetLayer }}', 'infra')
      )
    )
  jobs:
  - template: templates-iac/layer-jobs.yml@templates
    parameters:
      layerName: 'infra'
      layerPath: 'infra'
      tfstateKeyPrefix: '${{ variables.tfstateKeyPrefix }}'
      targetEnvironment: '${{ parameters.targetEnvironment }}'
      tofuVersion: '${{ variables.tofuVersion }}'

# Layer 2: Chatbot
- stage: Layer_chatbot
  displayName: 'üèóÔ∏è Layer: chatbot'
  condition: |
    and(
      in(dependencies.Validate.result, 'Succeeded', 'SucceededWithIssues'),
      or(
        eq('${{ parameters.targetLayer }}', ''),
        eq('${{ parameters.targetLayer }}', 'chatbot')
      )
    )
  jobs:
  - template: templates-iac/layer-jobs.yml@templates
    parameters:
      layerName: 'chatbot'
      layerPath: 'chatbot'
      tfstateKeyPrefix: '${{ variables.tfstateKeyPrefix }}'
      targetEnvironment: '${{ parameters.targetEnvironment }}'
      tofuVersion: '${{ variables.tofuVersion }}'
